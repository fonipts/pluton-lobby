name: fastapi
choices:
  - name: name
    question: What is your name
    type: input
  - name: py_install
    question: What package installer do you want to use?
    type: single_choice
    default: pip
    option:
      - pip
      - pip2
      - pip3    
  - name: database
    question: What is your Database choice?
    type: single_choice
    option:
      - postgres
      - mysql
      - none
  - name: redis
    question: Do you want Redis?
    type: single_choice
    option:
      - "yes"
      - "no"
  - name: pydantic_choice
    question: Do you want Pydantic? for API validation and serialization
    type: single_choice
    option:
      - "yes"
      - "no"    
  - name: docker
    question: Do you want Dockerfile?
    type: single_choice
    option:
      - "No plan"
      - "python"
      - "nginx"
      - "apache2"
script:
  pip_install:
    description: Install package
    command:
    - "{{py_install}} install -r requirements.txt"
  start:
    command:
    - fastapi dev app/main.py
files:
  default:
    - file: requirements.tpltxt
    - file: app/main.tplpy
    - file: app/__init__.tplpy
    - file: app/helper/__init__.tplpy
    - file: app/model/__init__.tplpy
    - file: app/dependency/header.tplpy
    - file: app/dependency/__init__.tplpy
    - file: app/routers/__init__.tplpy
    - file: app/routers/items.tplpy
    - file: app/routers/users.tplpy
    - file: README.md
  optional:
    - condition: pydantic_choice == "yes"
      dependent:
      - file: app/model/serialize/__init__.tplpy
    - condition: database != "none" || redis == "yes"
      dependent:
      - file: app/dependency/db.tplpy
      - file: app/model/db/__init__.tplpy
      - file: app/helper/db.tplpy
      - file: .env     
    - condition: docker != "No plan"
      dependent:
      - file: Dockerfile.tpl
bootscript:
  - command: "{{py_install}} install -r requirements.txt"
